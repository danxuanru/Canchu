name: Connect to EC2

on:
  push:
    branches:
      - develop
  workflow_dispatch:  # 允許你從 Action 頁簽上手動執行 workflow

jobs:
  docker_to_EC2:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # - name: Login to Docker Hub
      #   uses: docker/login-action
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # - name: Run Test
      #   run: |

      # - name: Build Docker Image # 引入secrets env & build docker compose
      #   run: |
      #     cd project
      #     echo "${{ secrets.ENV_FILE  }}" > .env 
      #     echo "${{ secrets.CERTIFICATE_CRT  }}" > private/certificate.crt
      #     echo "${{ secrets.PRIVATE_KEY  }}" > private/private.key
      #     docker-compose build
      #     docker-compose --env-file .env up -d

      # - name: Push Docker to Docker Hub
      #   uses: docker push
    
  deploy_docker:
    runs-on: self-hosted
      
    steps:
      # - name: Install Docker on EC2
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y docker.io
  
      - name: Connection to EC2
        uses: appleboy/ssh-action@master
        run: |
          echo ${{ secrets.EC2_SSH_PRIVATE_KEY }} > key.pem
          chmod 600 key.pem
          ssh -i key.pem ${{ EC2_USERNAME }}@${{ secrets.EC2_HOST }}
      
      # - name: Install Docker on EC2
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y docker
        
      # - name: Deploy Docker Container on EC2
      #   run: |
      #     ssh ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "docker pull ${{ secrets.DOCKERHUB_USERNAME }}/project"
      #     ssh ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "docker-compose --env-file .env up -d"
        
        